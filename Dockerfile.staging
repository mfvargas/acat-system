# ACAT System - Staging Dockerfile (Simplified)
FROM python:3.11-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV DJANGO_SETTINGS_MODULE=acat_system.settings.staging

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    libpq-dev \
    libgdal-dev \
    gdal-bin \
    postgresql-client \
    python3-dev \
    build-essential \
    cron \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY . .

# Copy and set permissions for staging scripts
COPY entrypoint.staging.sh /app/
COPY scripts/backup.sh /app/scripts/
COPY scripts/health-check.sh /app/scripts/
RUN chmod +x /app/entrypoint.staging.sh
RUN chmod +x /app/scripts/backup.sh
RUN chmod +x /app/scripts/health-check.sh

# Create directories for logs and static files
RUN mkdir -p /app/logs /app/staticfiles /app/media /var/log/acat-system

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health/ || exit 1

# Expose port
EXPOSE 8000

# Set entrypoint
ENTRYPOINT ["/app/entrypoint.staging.sh"]
CMD ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "3", "--timeout", "120", "acat_system.wsgi:application"]
