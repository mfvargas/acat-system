version: '3.8'

services:
  # PostgreSQL + PostGIS Database for Staging
  db:
    image: postgis/postgis:15-3.3
    container_name: acat_postgres_staging
    environment:
      - POSTGRES_DB=acat_staging
      - POSTGRES_USER=acat_staging_user
      - POSTGRES_PASSWORD=staging_secure_password_change_me
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    volumes:
      - postgres_staging_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
      - ./backups/staging:/backups
    restart: unless-stopped
    networks:
      - acat_staging_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis Cache for Staging
  redis:
    image: redis:7-alpine
    container_name: acat_redis_staging
    ports:
      - "6380:6379"  # Different port to avoid conflicts
    volumes:
      - redis_staging_data:/data
    restart: unless-stopped
    networks:
      - acat_staging_network
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

  # Django Web Application for Staging
  web:
    build: 
      context: .
      dockerfile: Dockerfile.staging
    container_name: acat_web_staging
    command: ["/app/entrypoint.staging.sh"]
    volumes:
      - .:/app
      - static_staging_volume:/app/staticfiles
      - media_staging_volume:/app/media
      - staging_logs:/app/logs
    ports:
      - "8001:8000"  # Different port for staging
    depends_on:
      - db
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=acat_system.settings.staging
    env_file:
      - .env.staging
    restart: unless-stopped
    networks:
      - acat_staging_network
    # Resource limits to fix exit code 137 (memory issues)
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.75'
        reservations:
          memory: 512M
          cpus: '0.25'
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"

  # Nginx Reverse Proxy for Staging
  nginx:
    image: nginx:alpine
    container_name: acat_nginx_staging
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx/staging.conf:/etc/nginx/conf.d/default.conf
      - static_staging_volume:/app/staticfiles
      - media_staging_volume:/app/media
      - ./ssl/staging:/etc/nginx/ssl
    depends_on:
      - web
    restart: unless-stopped
    networks:
      - acat_staging_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# Named Volumes for Staging
volumes:
  postgres_staging_data:
    name: acat_postgres_staging_data
  redis_staging_data:
    name: acat_redis_staging_data
  static_staging_volume:
    name: acat_static_staging_volume
  media_staging_volume:
    name: acat_media_staging_volume
  staging_logs:
    name: acat_staging_logs

# Networks
networks:
  acat_staging_network:
    name: acat_staging_network
    driver: bridge
